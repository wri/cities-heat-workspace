---
title: "Merge tiled results"
format: html
editor: visual
---

## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
1 + 1
```

Merging of the tile size 1000 tiles

```{r}
library(terra)

# Base input folder (1000m tiles)
tile_base <- "C:/Users/Lincoln.Chanakira/OneDrive - World Resources Institute/Documents/WRI/ZAF-Cape_Town-tile_1000-baseline/ZAF-Cape_Town-tile_1000-baseline_baseline_v1/tcm_results_umep/met_era5_hottest_days"

# Output folder
output_dir <- "C:/Users/Lincoln.Chanakira/OneDrive - World Resources Institute/Documents/WRI/ZAF-Cape_Town-tile_1000-baseline/merged_outputs"
if (dir.exists(output_dir)) unlink(output_dir, recursive = TRUE, force = TRUE)
dir.create(output_dir, recursive = TRUE, showWarnings = FALSE)

# List of raster filenames you want to merge
filenames_to_merge <- c(
  "Shadow_2023_1_1200D.tif",
  "Shadow_2023_1_1500D.tif",
  "Shadow_2023_1_1800D.tif",
  "Tmrt_2023_1_1200D.tif",
  "Tmrt_2023_1_1500D.tif",
  "Tmrt_2023_1_1800D.tif",
  "Tmrt_average.tif"
)

# Merge each raster type across all tiles
for (filename in filenames_to_merge) {
  tile_dirs <- list.dirs(tile_base, recursive = FALSE, full.names = TRUE)
  
  raster_paths <- file.path(tile_dirs, filename)
  raster_paths <- raster_paths[file.exists(raster_paths)]
  
  if (length(raster_paths) > 0) {
    rasters <- lapply(raster_paths, rast)
    merged <- do.call(merge, rasters)
    
    out_file <- file.path(output_dir, filename)
    writeRaster(merged, out_file, overwrite = TRUE)
    message(paste("✅ Merged:", filename))
  } else {
    message(paste("⚠️ File not found in any tile:", filename))
  }
}

```

merging for size 2000m

```{r}
library(terra)

# Base input folder (2000m tiles)
tile_base <- "C:/Users/Lincoln.Chanakira/OneDrive - World Resources Institute/Documents/WRI/ZAF-Cape_Town-tile_2000m-baseline/ZAF-Cape_Town-tile_2000m-baseline_baseline_v1/tcm_results_umep/met_era5_hottest_days"

# Output folder
output_dir <- "C:/Users/Lincoln.Chanakira/OneDrive - World Resources Institute/Documents/WRI/ZAF-Cape_Town-tile_2000m-baseline/merged_outputs"
if (dir.exists(output_dir)) unlink(output_dir, recursive = TRUE, force = TRUE)
dir.create(output_dir, recursive = TRUE, showWarnings = FALSE)

# List of raster filenames you want to merge
filenames_to_merge <- c(
  "Shadow_2023_1_1200D.tif",
  "Shadow_2023_1_1500D.tif",
  "Shadow_2023_1_1800D.tif",
  "Tmrt_2023_1_1200D.tif",
  "Tmrt_2023_1_1500D.tif",
  "Tmrt_2023_1_1800D.tif",
  "Tmrt_average.tif"
)

# Merge each raster type across all tiles
for (filename in filenames_to_merge) {
  tile_dirs <- list.dirs(tile_base, recursive = FALSE, full.names = TRUE)
  
  raster_paths <- file.path(tile_dirs, filename)
  raster_paths <- raster_paths[file.exists(raster_paths)]
  
  if (length(raster_paths) > 0) {
    rasters <- lapply(raster_paths, rast)
    merged <- do.call(merge, rasters)
    
    out_file <- file.path(output_dir, filename)
    writeRaster(merged, out_file, overwrite = TRUE)
    message(paste("✅ Merged:", filename))
  } else {
    message(paste("⚠️ File not found in any tile:", filename))
  }
}

```

merging for 3000m

```{r}
library(terra)

# Base input folder (3000m tiles)
tile_base <- "C:/Users/Lincoln.Chanakira/OneDrive - World Resources Institute/Documents/WRI/ZAF-Cape_Town-tile_3000m-baseline/ZAF-Cape_Town-tile_3000m-baseline_baseline_v1/tcm_results_umep/met_era5_hottest_days"

# Output folder
output_dir <- "C:/Users/Lincoln.Chanakira/OneDrive - World Resources Institute/Documents/WRI/ZAF-Cape_Town-tile_3000m-baseline/merged_outputs"
if (dir.exists(output_dir)) unlink(output_dir, recursive = TRUE, force = TRUE)
dir.create(output_dir, recursive = TRUE, showWarnings = FALSE)

# List of raster filenames you want to merge
filenames_to_merge <- c(
  "Shadow_2023_1_1200D.tif",
  "Shadow_2023_1_1500D.tif",
  "Shadow_2023_1_1800D.tif",
  "Tmrt_2023_1_1200D.tif",
  "Tmrt_2023_1_1500D.tif",
  "Tmrt_2023_1_1800D.tif",
  "Tmrt_average.tif"
)

# Merge each raster type across all tiles
for (filename in filenames_to_merge) {
 if (length(raster_paths) > 0) {
  rasters <- lapply(raster_paths, rast)
  
  out_file <- file.path(output_dir, filename)
  
  if (length(rasters) == 1) {
    writeRaster(rasters[[1]], out_file, overwrite = TRUE)
    message(paste("✅ Only one raster found — saved as is:", filename))
  } else {
    merged <- do.call(merge, rasters)
    writeRaster(merged, out_file, overwrite = TRUE)
    message(paste("✅ Merged:", filename))
  }
}
}

```

merged for 4000m

```{r}
library(terra)

# Base input folder (3000m tiles)
tile_base <- "C:/Users/Lincoln.Chanakira/OneDrive - World Resources Institute/Documents/WRI/ZAF-Cape_Town-tile_4000m-baseline/ZAF-Cape_Town-tile_4000m-baseline_baseline_v1/tcm_results_umep/met_era5_hottest_days"

# Output folder
output_dir <- "C:/Users/Lincoln.Chanakira/OneDrive - World Resources Institute/Documents/WRI/ZAF-Cape_Town-tile_4000m-baseline/merged_outputs"
if (dir.exists(output_dir)) unlink(output_dir, recursive = TRUE, force = TRUE)
dir.create(output_dir, recursive = TRUE, showWarnings = FALSE)

# List of raster filenames you want to merge
filenames_to_merge <- c(
  "Shadow_2023_1_1200D.tif",
  "Shadow_2023_1_1500D.tif",
  "Shadow_2023_1_1800D.tif",
  "Tmrt_2023_1_1200D.tif",
  "Tmrt_2023_1_1500D.tif",
  "Tmrt_2023_1_1800D.tif",
  "Tmrt_average.tif"
)

# Merge each raster type across all tiles
for (filename in filenames_to_merge) {
 if (length(raster_paths) > 0) {
  rasters <- lapply(raster_paths, rast)
  
  out_file <- file.path(output_dir, filename)
  
  if (length(rasters) == 1) {
    writeRaster(rasters[[1]], out_file, overwrite = TRUE)
    message(paste("✅ Only one raster found — saved as is:", filename))
  } else {
    merged <- do.call(merge, rasters)
    writeRaster(merged, out_file, overwrite = TRUE)
    message(paste("✅ Merged:", filename))
  }
}
}

```

summary to compare

```{}
```

```{r}
library(terra)
library(dplyr)

# Untiled folder
untiled_dir <- "C:/Users/Lincoln.Chanakira/OneDrive - World Resources Institute/Documents/WRI/ZAF-Cape_Town-untiled-baseline/ZAF-Cape_Town-untiled-baseline_baseline_v1/tcm_results_umep/met_era5_hottest_days/tile_001"

# Tile size folders
tile_sizes <- c("1000", "2000", "3000m", "4000m")
merged_base <- "C:/Users/Lincoln.Chanakira/OneDrive - World Resources Institute/Documents/WRI"

# Files to compare
raster_files <- c("Shadow_2023_1_1500D.tif", "Tmrt_2023_1_1500D.tif", "Tmrt_average_2023_1.tif")
thresholds <- c(0.05, 0.5, 0.5)

# Initialize results
results <- list()

for (tile in tile_sizes) {
  if (tile %in% c("1000", "2000")) {
    comparison_dir <- file.path(merged_base, paste0("ZAF-Cape_Town-tile_", tile, "-baseline"), "merged_outputs")
  } else {
    comparison_dir <- file.path(merged_base, paste0("ZAF-Cape_Town-tile_", tile, "-baseline"), 
                                paste0("ZAF-Cape_Town-tile_", tile, "-baseline_baseline_v1"),
                                "tcm_results_umep", "met_era5_hottest_days", "tile_001")
  }
  
  for (i in seq_along(raster_files)) {
    file <- raster_files[i]
    threshold <- thresholds[i]
    
    untiled_path <- file.path(untiled_dir, file)
    comparison_path <- file.path(comparison_dir, file)
    
    if (file.exists(untiled_path) && file.exists(comparison_path)) {
      r1 <- rast(untiled_path)
      r2 <- rast(comparison_path)
      
      # Align resolution and extent
      r2 <- resample(r2, r1, method = "bilinear")
      
      diff <- abs(r1 - r2)
      
      # Metrics
      mean_diff <- global(diff, "mean", na.rm = TRUE)[1, 1]
      max_diff <- global(diff, "max", na.rm = TRUE)[1, 1]
      pct_large_diff <- 100 * sum(values(diff > threshold), na.rm = TRUE) / ncell(diff)
      
      results[[length(results) + 1]] <- data.frame(
        TileSize = tile,
        File = file,
        MeanDiff = round(mean_diff, 4),
        MaxDiff = round(max_diff, 4),
        PctAboveThreshold = round(pct_large_diff, 2)
      )
    } else {
      message(paste("⚠️ Missing file for tile size", tile, ":", file))
    }
  }
}

# Combine and print
summary_df <- bind_rows(results)
print(summary_df)

# Save to CSV
write.csv(summary_df, file = "C:/Users/Lincoln.Chanakira/OneDrive - World Resources Institute/Documents/WRI/ctcm_tile_comparison_summary.csv", row.names = FALSE)

```
